%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.8.0.347 (R2009a). Operating System: Microsoft Windows XP.
%%Title: C:\Documents and Settings\admin-zzamani\My Documents\workspace\camdp-xadd\ExperimentsCPOMDP\nodes2.eps
%%CreationDate: 05/16/2012  17:09:32
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    56   237   538   604
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    56   237   538   604
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0672 7248 csm

    0     0  5792  4403 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5793 4404 rf
6 w
0 3366 4489 0 0 -3366 753 3919 4 MP
PP
-4489 0 0 3366 4489 0 0 -3366 753 3919 5 MP stroke
4 w
DO
SO
6 w
0 sg
 753 3919 mt 5242 3919 L
 753 3919 mt  753  553 L
 753 3919 mt  753 3874 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 720 4064 mt 
(1) s
1650 3919 mt 1650 3874 L
1617 4064 mt 
(2) s
2548 3919 mt 2548 3874 L
2515 4064 mt 
(3) s
3446 3919 mt 3446 3874 L
3413 4064 mt 
(4) s
4344 3919 mt 4344 3874 L
4311 4064 mt 
(5) s
5242 3919 mt 5242 3874 L
5209 4064 mt 
(6) s
 753 3919 mt  797 3919 L
 652 3963 mt 
(0) s
 753 3438 mt  797 3438 L
 585 3482 mt 
(10) s
 753 2957 mt  797 2957 L
 585 3001 mt 
(20) s
 753 2476 mt  797 2476 L
 585 2520 mt 
(30) s
 753 1995 mt  797 1995 L
 585 2039 mt 
(40) s
 753 1514 mt  797 1514 L
 585 1558 mt 
(50) s
 753 1033 mt  797 1033 L
 585 1077 mt 
(60) s
 753  553 mt  797  553 L
 585  597 mt 
(70) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 420 FMSR

2266 4359 mt 
(Horizon) s
 436 3883 mt  -90 rotate
(Number of Nodes) s
90 rotate
1881  391 mt 
(Power Plant) s
gs 753 553 4490 3367 rc
DA
36 w
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
898 0 898 -192 898 -97 898 -192 897 -96 753 3726 6 MP stroke
gr

36 w
c8
DA
SO
 717 3726 mt  789 3726 L
 753 3690 mt  753 3762 L
1614 3630 mt 1686 3630 L
1650 3594 mt 1650 3666 L
2512 3438 mt 2584 3438 L
2548 3402 mt 2548 3474 L
3410 3341 mt 3482 3341 L
3446 3305 mt 3446 3377 L
4308 3149 mt 4380 3149 L
4344 3113 mt 4344 3185 L
5206 3149 mt 5278 3149 L
5242 3113 mt 5242 3185 L
 728 3701 mt  778 3751 L
 778 3701 mt  728 3751 L
1625 3605 mt 1675 3655 L
1675 3605 mt 1625 3655 L
2523 3413 mt 2573 3463 L
2573 3413 mt 2523 3463 L
3421 3316 mt 3471 3366 L
3471 3316 mt 3421 3366 L
4319 3124 mt 4369 3174 L
4369 3124 mt 4319 3174 L
5217 3124 mt 5267 3174 L
5267 3124 mt 5217 3174 L
DA
gs 753 553 4490 3367 rc
SO
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
898 -1443 898 -529 898 -336 898 288 897 -529 753 3486 6 MP stroke
gr

c9
SO
 728 3461 mt  778 3511 L
 778 3461 mt  728 3511 L
1625 2932 mt 1675 2982 L
1675 2932 mt 1625 2982 L
2523 3220 mt 2573 3270 L
2573 3220 mt 2523 3270 L
3421 2884 mt 3471 2934 L
3471 2884 mt 3421 2934 L
4319 2355 mt 4369 2405 L
4369 2355 mt 4319 2405 L
5217  912 mt 5267  962 L
5267  912 mt 5217  962 L
gs 753 553 4490 3367 rc
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 736 3962 mt 
( ) s
5226  595 mt 
( ) s
6 w
1 sg
0 810 3672 0 0 -810 765 1366 4 MP
PP
-3672 0 0 810 3672 0 0 -810 765 1366 5 MP stroke
4 w
DO
SO
6 w
0 sg
 765  556 mt 4437  556 L
 765 1366 mt 4437 1366 L
4437 1366 mt 4437  556 L
 765 1366 mt  765  556 L
 765 1366 mt 4437 1366 L
 765 1366 mt  765  556 L
 765  556 mt 4437  556 L
 765 1366 mt 4437 1366 L
4437 1366 mt 4437  556 L
 765 1366 mt  765  556 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 312 FMSR

1247  879 mt 
(1 state & 1 observ var) s
gs 765 556 3673 811 rc
DA
36 w
c8
371 0 839 769 2 MP stroke
SO
gs 914 659 221 221 rc
 988  769 mt 1060  769 L
1024  733 mt 1024  805 L
 999  744 mt 1049  794 L
1049  744 mt  999  794 L
gr

gr

36 w
c8
0 sg
1247 1264 mt 
(2 state & 2 observ vars) s
gs 765 556 3673 811 rc
c9
371 0 839 1153 2 MP stroke
gs 914 1043 221 221 rc
 999 1128 mt 1049 1178 L
1049 1128 mt  999 1178 L
gr

6 w
gr

6 w
c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
